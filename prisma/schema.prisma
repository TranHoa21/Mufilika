generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())

}

enum Role {
  ADMIN
  CUSTOMER
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String?
  price       Float
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  imageUrl    String?        // Ảnh chính
  images      ProductImage[] // Liên kết đến nhiều ảnh
  orders      Order[]
}

model ProductImage {
  id        String   @id @default(uuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

model Order {
  id            String        @id @default(uuid())
  product       Product?      @relation(fields: [productId], references: [id])
  productId     String?
  quantity      Int           @default(1)
  totalPrice    Float
  status        OrderStatus   @default(PENDING)
  createdAt     DateTime      @default(now())

  // Thông tin khách hàng
  name          String
  phone         String
  email         String
  address       String
  paymentMethod String

  // Dành cho trường hợp khách chọn nhờ thiết kế
  designType    String
  drawStyle     String?     // Kiểu vẽ: Màu, trắng đen...
  font          String?     // Font chữ
  customText    String?     // Tên in, lời nhắn
  imageUrl      String      // Link ảnh khách gửi

  designRequest DesignRequest?
  notifications Notification[]
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  COMPLETED
  CANCELLED
}


model DesignRequest {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @unique
  notes     String?  // mô tả yêu cầu
  imageUrl  String?  // ảnh khách tải lên
  status    DesignStatus @default(RECEIVED)
  createdAt DateTime @default(now())
}

enum DesignStatus {
  RECEIVED
  IN_PROGRESS
  DONE
}

model Post {
  id              String   @id @default(uuid())
  title           String   // Tiêu đề bài viết
  slug            String   @unique  // URL thân thiện SEO
  content         String   // Nội dung bài viết (HTML hoặc Markdown)
  imageUrl        String?  // Ảnh đại diện bài viết (Thumbnail)
  contentImages   String[] // Danh sách ảnh trong bài viết
  metaTitle       String?  // Tiêu đề SEO
  metaDescription String?  // Mô tả SEO
  keywords        String?  // Từ khóa SEO
  published       Boolean  @default(false) // Đã đăng hay chưa
  publishedAt     DateTime?  // Ngày đăng bài viết
  views           Int      @default(0) // Số lượt xem bài viết
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Notification {
  id        String   @id @default(uuid())
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
}
